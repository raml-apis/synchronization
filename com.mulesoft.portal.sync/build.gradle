apply plugin: 'java'
apply plugin: 'maven'

group = 'com.mulesoft.portal.sync'
version = '0.0.1-SNAPSHOT'

description = """"""

sourceCompatibility = 1.5
targetCompatibility = 1.5



repositories {
        
     maven { url "http://repo.maven.apache.org/maven2" }
}

import com.mulesoft.portal.apis.github.GitHubConnector;
import com.mulesoft.portal.apis.sync.SynchronizationManager;
import com.mulesoft.portal.client.PortalClient;
import com.mulesoft.portal.apis.hlm.APIProject;
import com.mulesoft.portal.apis.hlm.ProjectBuilder;

import java.io.File;

Map ENV = System.getenv()
String ghPassword = ENV['GITHUBPASS']
String ghLogin = ENV['GITHUBLOGIN']
String portalPassword = ENV['PORTALPASSWORD']
String portalLogin = ENV['PORTALLOGIN']

ArrayList<String> branches = new ArrayList<String>(Arrays.asList("production","staging"));

task syncAllAPIs() << {
    String userDir = System.getProperty("user.dir");
    File rootFile = new File(userDir);
    SynchronizationManager v = new SynchronizationManager(portalLogin,portalPassword,ghLogin,ghPassword);
    println("Starting api sync");
    v.syncAllApis(rootFile, "API-Notebook-Test-Organization-3", branches);
    println("API sync completed");
}
task syncAPI() << {
    new com.mulesoft.portal.test.Test().sendMessage("commit="+ENV['GIT_COMMIT']+", branch="+ENV['GIT_BRANCH']);
    String userDir = System.getProperty("user.dir");
    File rootFile = new File(userDir);
    SynchronizationManager v = new SynchronizationManager(portalLogin,portalPassword,ghLogin,ghPassword);
    println("Starting api sync");
    v.syncAPI(rootFile, branches);
    println("API sync completed");
}
task cleanPortal() << {
    SynchronizationManager v = new SynchronizationManager(portalLogin,portalPassword,ghLogin,ghPassword);
    v.removeAllApisFromPortal();
}


